Epoch 1
-------------------------------
Traceback (most recent call last):
  File "/Users/mukh/Desktop/Work/Dysarthria/Dysarthria_classification/main.py", line 207, in <module>
    main()
  File "/Users/mukh/Desktop/Work/Dysarthria/Dysarthria_classification/main.py", line 147, in main
    train_model(args, model, train_dataloader, val_dataloader, optimizer, loss_fn, device, output_path = output_path, wandb=wandb)
  File "/Users/mukh/Desktop/Work/Dysarthria/Dysarthria_classification/src/train/train.py", line 75, in train_model
    train_loss, train_acc = train_loop(train_loader, model, loss_fn, optimizer, device, wandb)
  File "/Users/mukh/Desktop/Work/Dysarthria/Dysarthria_classification/src/train/train.py", line 15, in train_loop
    pred = model(batch_input.to(device))
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mukh/Desktop/Work/Dysarthria/Dysarthria_classification/src/models/model.py", line 53, in forward
    output_features = self.SSLModel(x).last_hidden_state
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/transformers/models/hubert/modeling_hubert.py", line 1091, in forward
    encoder_outputs = self.encoder(
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/transformers/models/hubert/modeling_hubert.py", line 713, in forward
    position_embeddings = self.pos_conv_embed(hidden_states)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/transformers/models/hubert/modeling_hubert.py", line 294, in forward
    hidden_states = self.conv(hidden_states)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    result = hook(self, args)
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/utils/weight_norm.py", line 65, in __call__
    setattr(module, self.name, self.compute_weight(module))
  File "/Users/mukh/opt/anaconda3/lib/python3.9/site-packages/torch/nn/utils/weight_norm.py", line 25, in compute_weight
    return _weight_norm(v, g, self.dim)
NotImplementedError: The operator 'aten::_weight_norm_interface' is not currently implemented for the MPS device. If you want this op to be added in priority during the prototype phase of this feature, please comment on https://github.com/pytorch/pytorch/issues/77764. As a temporary fix, you can set the environment variable `PYTORCH_ENABLE_MPS_FALLBACK=1` to use the CPU as a fallback for this op. WARNING: this will be slower than running natively on MPS.